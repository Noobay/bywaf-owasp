TODO:
=====

- Finish simpleplugin.py
- use global vars' settings instead of hardcoding MAX_CONCURRENT_JOBS and HISTORY_FILENAME
- (if changing MAX_CONCURRENT_JOBS, either change it in the Executor or make a new Executor)
- Fix:  do_kill(): calling cancel() doesn't end Futures job 
- Fix:  do_shell(): &-backgrounded shell operations stay in "Running" state

- Formally document the user interface for users

[PINNED] Clean up, refactor and simplify code to keep LOCs down (roeyk)
[CANCELED] capture return value of do_shell() (needed?) (roeyk)
[CANCELED] Uncouple job results from Futures objects (see *) (roeyk)
[CANCELED] Move global_options to the same "options" format used by
           plugins (roeyk)
[DONE] Formally document the WAFterpreter class, the plugin model, (roeyk)
[DONE] move from Python 2.x "%d" % x -> Python 3.x "{}".format(x) ->
       ByWAF is now Python2/3 compatible (roeyk)
[DONE] move from Python 2.x print -> Python 3.x print() (roeyk)
[DONE] tab completion for gset()/gshow() & clean them from errors (roeyk)
[DONE] Get quit/exit to work (roeyk)
[DONE] Add commands to show/load/save command history (roeyk)
[DONE] Load scripts from standard input, command-line option and
       from the interpreter (do_script) (roeyk)
[DONE] Ignore comments on command line (comments start wth '#') (roeyk)
[DONE] implement shell access (roeyk)
[DONE] Convert verification if()'s to try/except (state the intent
       right off, not couched in an if statement) (roeyk)
[DONE] Implement complete_ funcs for all do_ funcs (roeyk)
[DONE] Implement filename tab completion for the 'use' command (see
       complete_eggs issue) (roeyk)
[DONE] Implement a help for the environment variables that shows:
       <option name>  <current value>  <default value>  <required>  <description> (roeyk)
[DONE] fix the help system (override get_names() and such) (roeyk)
[DONE] finish implementing do_d(). Iterate over and delete job with
       matching task ID (roeyk)
[DONE] do not allow internal commands to be backgrounded (roeyk)
[DONE] drop Cement dependency (roeyk)

(*)
since we plan on being able to background internal commands, then:
uncouple results from Futures (and save all command outputs uniformly, whether or not they have backgrounded).
so that way we can capture results of foregrounded jobs as well. 
do this by writing the callback to move finished output from the Futures result to a master list of results.


